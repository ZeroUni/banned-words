plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	// id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	
	// Add JitPack repository for whisper-jni
	maven { url 'https://jitpack.io' }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"banned-words" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Use the local whisper-jni JAR and include it in the final JAR
	implementation files('whisper-jni-1.7.1.jar')
	// shadow files('whisper-jni-1.7.1.jar')
	// include files('whisper-jni-1.7.1.jar')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// Configure Shadow plugin for fat JAR
// shadowJar {
// 	configurations = [project.configurations.shadow]
	
// 	// Use remapJar output instead of jar to ensure we have proper refMaps
// 	from remapJar
	
// 	// Handle duplicates gracefully
// 	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	
// 	// Include native libraries in the JAR
// 	from('run') {
// 		include '*.dll'
// 		include 'ggml-small.en-q8_0.bin'  // Include the default model
// 		into 'natives/'
// 	}
	
// 	// Exclude some unnecessary files to reduce JAR size
// 	exclude 'META-INF/*.SF'
// 	exclude 'META-INF/*.DSA'
// 	exclude 'META-INF/*.RSA'
	
// 	// Don't relocate whisper-jni as it might break JNI loading
// 	// relocate 'io.github.givimad.whisperjni', 'zerouni.bannedwords.whisper'
	
// 	// Merge service files properly
// 	mergeServiceFiles()
// }

// Make shadowJar depend on remapJar and set build dependencies
// shadowJar.dependsOn remapJar
// build.dependsOn shadowJar
// shadowJar.mustRunAfter remapJar

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}